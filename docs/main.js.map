{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, ViewChild, AfterViewInit, ElementRef, NgZone } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { startWith } from \"rxjs/operators\"\nimport { AbstractMesh, ArcRotateCamera, Color3, Color4, CubeTexture, Engine, PBRMaterial, PointLight, Scene, SceneLoader, StandardMaterial, Vector3 } from \"@babylonjs/core\"\nimport \"@babylonjs/loaders/glTF\"\n//import \"@babylonjs/core/Debug/debugLayer\";\n//import \"@babylonjs/inspector\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  \n  private _engine: Engine\n  private _scene: Scene\n  private _hdrTexture: CubeTexture\n\n  pommadierType = new FormControl(\"verre\");\n  pommadierColor = new FormControl(\"white\");\n  couvercleColor = new FormControl(\"black\");\n\n\n  constructor(\n    private readonly _ngZone: NgZone\n  ){}\n  \n  @ViewChild(\"canvas\", { static: true }) private _canvas: ElementRef<HTMLCanvasElement>\n\n  ngAfterViewInit(): void {\n    this.InitScene(() => {\n      combineLatest([\n        this.pommadierColor.valueChanges.pipe(startWith(this.pommadierColor.value)),\n        this.pommadierType.valueChanges.pipe(startWith(this.pommadierType.value))\n      ]).subscribe(() => this.updatePommadierMaterial());\n      combineLatest([\n        this.couvercleColor.valueChanges.pipe(startWith(this.couvercleColor.value))\n      ]).subscribe(() => this.updateCouvercleMaterial());\n    });\n  }\n\n  private InitScene(callback: () => void)\n  {\n    // engine\n    this._engine = new Engine(this._canvas.nativeElement, true);\n\n    // scene\n    this._scene = new Scene(this._engine);\n    this._scene.clearColor = new Color4(0,0,0,0);\n    //this._scene.debugLayer.show({  })\n\n    // camera\n    const camera = new ArcRotateCamera(\"camera\", -Math.PI / 2, Math.PI / 2.5, 15, new Vector3(0,0,0), this._scene);\n    camera.attachControl(this._canvas.nativeElement, false);\n\n    // light\n    const light = new PointLight(\"light\", new Vector3(0,40,40), this._scene);\n    const light1 = new PointLight(\"light\", new Vector3(40,40,-40), this._scene);\n    const light2 = new PointLight(\"light\", new Vector3(-40,40,-40), this._scene);\n\n    // environment texture\n    //var hdrTexture = new HDRCubeTexture(\"/assets/room.hdr\", scene, 512);\n    this._hdrTexture = CubeTexture.CreateFromPrefilteredData(\"assets/environment.dds\", this._scene);\n\n    // objects\n    SceneLoader.Append(\"assets/\", \"pommadier.gltf\", this._scene, (scene) => {\n      let pommadier = scene.getMeshByName(\"pommadier\");\n      let couvercle = scene.getMeshByName(\"couvercle\");\n      let etiquette = scene.getMeshByName(\"etiquette\");\n\n      this.initCouvercle(couvercle);\n      this.initEtiquette(etiquette);\n      this.initPommadier(pommadier);\n\n      callback();\n    })\n\n    // loop\n    this._ngZone.runOutsideAngular(() => {\n      this._engine.runRenderLoop(() => this._scene.render())\n    })\n  }\n\n  private initPommadier(mesh: AbstractMesh)\n  {\n    var glass = new PBRMaterial(\"pommadier\", this._scene);\n    mesh.material = glass;\n  }\n\n  private initEtiquette(mesh: AbstractMesh)\n  {\n    let etiquetteMat = new StandardMaterial(\"etiquette\", this._scene);\n    etiquetteMat.diffuseColor = new Color3(1,1,1);\n    etiquetteMat.emissiveColor = new Color3(.5,.5,.5);\n    mesh.material = etiquetteMat;\n  }\n\n  private initCouvercle(mesh: AbstractMesh)\n  {\n    let couvercleMaterial = new StandardMaterial(\"couvercle\", this._scene);\n    mesh.material = couvercleMaterial;\n  }\n\n  private updatePommadierMaterial()\n  {\n    let type : \"verre\" | \"plastic\" = this.pommadierType.value;\n    let color: string = this.pommadierColor.value;\n\n    let mat = this._scene.getMaterialByName(\"pommadier\") as PBRMaterial;\n    if(!mat) return;\n\n    if(type == \"verre\")\n    {\n      mat.reflectionTexture = this._hdrTexture;\n      mat.metallic = 0.1;\n      mat.roughness = 0;\n      mat.refractionTexture = this._hdrTexture;\n      mat.linkRefractionWithTransparency = true;\n      mat.indexOfRefraction = 0.52;\n      mat.alpha = 0;\n      mat.directIntensity = 0;\n      mat.environmentIntensity = 0.8;\n      mat.cameraExposure = 0.66;\n      mat.cameraContrast = 1.66;\n      mat.microSurface = 1;\n      mat.reflectivityColor = new Color3(.2,.2,.2);\n    } else {\n      mat.reflectionTexture = this._hdrTexture;\n      mat.metallic = 0.25;\n      mat.roughness = 0.25;\n      mat.refractionTexture = null;\n      mat.linkRefractionWithTransparency = false;\n      mat.indexOfRefraction = 0.52;\n      mat.alpha = 1;\n      mat.directIntensity = 0;\n      mat.environmentIntensity = 0.8;\n      mat.cameraExposure = 0.66;\n      mat.cameraContrast = 1.66;\n      mat.microSurface = 1;\n      mat.reflectivityColor = new Color3(.2,.2,.2);\n    }\n\n    if(color == \"white\"){\n      mat.albedoColor = new Color3(1,1,1);\n    } else if(color == \"black\") {\n      mat.albedoColor = new Color3(.1,.1,.1);\n    } else if(color == \"red\") {\n      mat.albedoColor = new Color3(.95,.2,.2);\n    } else if(color == \"green\") {\n      mat.albedoColor = new Color3(.2,.95,.2);\n    } else if(color == \"blue\") {\n      mat.albedoColor = new Color3(.2,.2,.95);\n    }\n  }\n\n  private updateCouvercleMaterial()\n  {\n    let color: string = this.couvercleColor.value;\n    let mat = this._scene.getMaterialByName(\"couvercle\") as StandardMaterial;\n    if(!mat) return;\n    mat.specularPower = 50;\n    if(color == \"white\"){\n      mat.diffuseColor = new Color3(1,1,1);\n    } else if(color == \"black\") {\n      mat.diffuseColor = new Color3(.1,.1,.1);\n    } else if(color == \"red\") {\n      mat.diffuseColor = new Color3(.95,.2,.2);\n    } else if(color == \"green\") {\n      mat.diffuseColor = new Color3(.2,.95,.2);\n    } else if(color == \"blue\") {\n      mat.diffuseColor = new Color3(.2,.2,.95);\n    }\n  }\n\n}\n","<canvas #canvas width=\"256\" height=\"256\"></canvas>\n<div>\n    <section>\n        <legend>Pommadier</legend>\n        <mat-form-field>\n            <mat-label>Type</mat-label>\n            <mat-select [formControl]=\"pommadierType\">\n                <mat-option value=\"verre\">Verre</mat-option>\n                <mat-option value=\"plastic\">Plastique</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Couleur</mat-label>\n            <mat-select [formControl]=\"pommadierColor\">\n                <mat-option value=\"red\">Rouge</mat-option>\n                <mat-option value=\"green\">Vert</mat-option>\n                <mat-option value=\"blue\">Bleu</mat-option>\n                <mat-option value=\"black\">Noir</mat-option>\n                <mat-option value=\"white\">Blanc</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </section>\n    <section>\n        <legend>Couvercle</legend>\n        <mat-form-field>\n            <mat-label>Couleur</mat-label>\n            <mat-select [formControl]=\"couvercleColor\">\n                <mat-option value=\"red\">Rouge</mat-option>\n                <mat-option value=\"green\">Vert</mat-option>\n                <mat-option value=\"blue\">Bleu</mat-option>\n                <mat-option value=\"black\">Noir</mat-option>\n                <mat-option value=\"white\">Blanc</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </section>\n</div>","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatFormFieldModule } from \"@angular/material/form-field\"\nimport { MatSelectModule } from \"@angular/material/select\"\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}