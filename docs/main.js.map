{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, ViewChild, AfterViewInit, ElementRef, NgZone } from '@angular/core';\nimport * as Babylon from \"babylonjs\"\nimport \"babylonjs-loaders\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  \n  constructor(\n    private readonly _ngZone: NgZone\n  ){}\n  \n  @ViewChild(\"canvas\", { static: true }) private _canvas: ElementRef<HTMLCanvasElement>\n\n  ngAfterViewInit(): void {\n\n\n    const engine = new Babylon.Engine(this._canvas.nativeElement, true);\n    const scene = new Babylon.Scene(engine);\n    scene.clearColor = new Babylon.Color4(0,0,0,0);\n\n    const camera = new Babylon.ArcRotateCamera(\"camera\", -Math.PI / 2, Math.PI / 2.5, 20, new Babylon.Vector3(0,0,0), scene);\n    camera.attachControl(this._canvas.nativeElement, false);\n\n    const light = new Babylon.PointLight(\"light\", new Babylon.Vector3(0,40,40), scene);\n    //const light = new Babylon.SpotLight(\"lightspot\", new Babylon.Vector3(0,20,-10), new Babylon.Vector3(0,0,0), 1.2, 24, scene);\n\n    // Environment Texture\n    //var hdrTexture = new Babylon.HDRCubeTexture(\"/assets/room.hdr\", scene, 512);\n    var hdrTexture = Babylon.CubeTexture.CreateFromPrefilteredData(\"assets/environment.dds\", scene);\n\n    // Skybox\n    /*var hdrSkybox = Babylon.MeshBuilder.CreateBox(\"hdrskybox\", { size: 1000 }, scene);\n    let hdrSkyboxMat = new Babylon.PBRMaterial(\"skybox\", scene);\n    hdrSkyboxMat.backFaceCulling = false;\n    hdrSkyboxMat.reflectionTexture = hdrTexture.clone();\n    hdrSkyboxMat.reflectionTexture.coordinatesMode = Babylon.Texture.SKYBOX_MODE;\n    hdrSkyboxMat.microSurface = 1.0;\n\t  hdrSkyboxMat.cameraExposure = 0.66;\n\t  hdrSkyboxMat.cameraContrast = 1.66;\n    hdrSkyboxMat.disableLighting = true;\n    hdrSkybox.material = hdrSkyboxMat;\n    hdrSkybox.infiniteDistance = true;*/\n\n    var glass = new Babylon.PBRMaterial(\"glass\", scene);\n    glass.reflectionTexture = hdrTexture;\n    glass.metallic = 0.1;\n    glass.roughness = 0.0;\n    //glass.refractionTexture = hdrTexture;\n    //glass.linkRefractionWithTransparency = true;\n    //glass.indexOfRefraction = 0.52;\n    //glass.alpha = 0;\n    glass.directIntensity = 0.0;\n    glass.environmentIntensity = 0.8;\n    glass.cameraExposure = 0.66;\n    glass.cameraContrast = 1.66;\n    glass.microSurface = 1;\n    glass.reflectivityColor = new BABYLON.Color3(0.2, 0.2, 0.2);\n    glass.albedoColor = new BABYLON.Color3(1,1,1);\n\n\n    Babylon.SceneLoader.Append(\"assets/\", \"pommadier.gltf\", scene, (scene) => {\n      let pommadier = scene.getMeshByName(\"pommadier\");\n      let couvercle = scene.getMeshByName(\"couvercle\");\n      let etiquette = scene.getMeshByName(\"etiquette\");\n\n\n      const shadowGen = new Babylon.ShadowGenerator(512, light);\n      shadowGen.getShadowMap().renderList.push(pommadier);\n      //shadowGen.useBlurExponentialShadowMap = true;\n      shadowGen.useCloseExponentialShadowMap = true;\n      //shadowGen.blurScale = 2;\n\n\n\n      let etiquetteMat = new Babylon.StandardMaterial(\"etiquette\", scene);\n      etiquetteMat.diffuseColor = new Babylon.Color3(1,1,1);\n      etiquette.material = etiquetteMat;\n\n      pommadier.material = glass;\n\n      let couvercleMaterial = new Babylon.StandardMaterial(\"couvercle\", scene);\n      couvercleMaterial.diffuseColor = new Babylon.Color3(.1,.1,.1);\n      couvercleMaterial.ambientColor =  new Babylon.Color3(.3,.3,.3);\n      couvercle.material = couvercleMaterial;\n      \n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      engine.runRenderLoop(() => scene.render())\n    })\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<canvas #canvas width=\"256\" height=\"256\"></canvas>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}